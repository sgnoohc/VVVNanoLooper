// -*- C++ -*-
// This is a header file generated with the command:
// makeCMS3ClassFiles("/home/users/phchang/work/vvv/VVV0Lep/merged/TTHad.root", "t", "VVV0LepTree", "tas", "vvv")

#ifndef VVV0LepTree_H
#define VVV0LepTree_H

#include "Math/LorentzVector.h"
#include "Math/GenVector/PtEtaPhiM4D.h"
#include "Math/Point3D.h"
#include "TMath.h"
#include "TBranch.h"
#include "TTree.h"
#include "TH1F.h"
#include "TFile.h"
#include "TBits.h"
#include <vector> 
#include <unistd.h> 
typedef ROOT::Math::LorentzVector< ROOT::Math::PtEtaPhiM4D<float> > LorentzVector;

using namespace std; 
class VVV0LepTree {
 private: 
 protected: 
  unsigned int index;
  int      Common_isData_;
  TBranch *Common_isData_branch;
  bool     Common_isData_isLoaded;
  int      Common_run_;
  TBranch *Common_run_branch;
  bool     Common_run_isLoaded;
  int      Common_lumi_;
  TBranch *Common_lumi_branch;
  bool     Common_lumi_isLoaded;
  unsigned long long Common_evt_;
  TBranch *Common_evt_branch;
  bool     Common_evt_isLoaded;
  int      Common_year_;
  TBranch *Common_year_branch;
  bool     Common_year_isLoaded;
  float    Common_genWeight_;
  TBranch *Common_genWeight_branch;
  bool     Common_genWeight_isLoaded;
  float    Common_btagWeight_DeepCSVB_;
  TBranch *Common_btagWeight_DeepCSVB_branch;
  bool     Common_btagWeight_DeepCSVB_isLoaded;
  float    Common_wgt_;
  TBranch *Common_wgt_branch;
  bool     Common_wgt_isLoaded;
  float    Common_event_puWeight_;
  TBranch *Common_event_puWeight_branch;
  bool     Common_event_puWeight_isLoaded;
  float    Common_event_puWeightup_;
  TBranch *Common_event_puWeightup_branch;
  bool     Common_event_puWeightup_isLoaded;
  float    Common_event_puWeightdn_;
  TBranch *Common_event_puWeightdn_branch;
  bool     Common_event_puWeightdn_isLoaded;
  float    Common_event_prefireWeight_;
  TBranch *Common_event_prefireWeight_branch;
  bool     Common_event_prefireWeight_isLoaded;
  float    Common_event_prefireWeightup_;
  TBranch *Common_event_prefireWeightup_branch;
  bool     Common_event_prefireWeightup_isLoaded;
  float    Common_event_prefireWeightdn_;
  TBranch *Common_event_prefireWeightdn_branch;
  bool     Common_event_prefireWeightdn_isLoaded;
  float    Common_event_triggerWeight_;
  TBranch *Common_event_triggerWeight_branch;
  bool     Common_event_triggerWeight_isLoaded;
  float    Common_event_triggerWeightup_;
  TBranch *Common_event_triggerWeightup_branch;
  bool     Common_event_triggerWeightup_isLoaded;
  float    Common_event_triggerWeightdn_;
  TBranch *Common_event_triggerWeightdn_branch;
  bool     Common_event_triggerWeightdn_isLoaded;
  vector<float> *Common_LHEReweightingWeight_;
  TBranch *Common_LHEReweightingWeight_branch;
  bool     Common_LHEReweightingWeight_isLoaded;
  bool     Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_;
  TBranch *Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_branch;
  bool     Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_isLoaded;
  bool     Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_;
  TBranch *Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_branch;
  bool     Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_isLoaded;
  bool     Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_;
  TBranch *Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_branch;
  bool     Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_isLoaded;
  bool     Common_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_;
  TBranch *Common_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_branch;
  bool     Common_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_isLoaded;
  bool     Common_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_;
  TBranch *Common_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_branch;
  bool     Common_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_isLoaded;
  bool     Common_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_;
  TBranch *Common_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_branch;
  bool     Common_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_isLoaded;
  bool     Common_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_;
  TBranch *Common_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_branch;
  bool     Common_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_isLoaded;
  bool     Common_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_;
  TBranch *Common_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_branch;
  bool     Common_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_isLoaded;
  bool     Common_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_;
  TBranch *Common_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_branch;
  bool     Common_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_isLoaded;
  bool     Common_HLT_IsoMu24_;
  TBranch *Common_HLT_IsoMu24_branch;
  bool     Common_HLT_IsoMu24_isLoaded;
  bool     Common_HLT_Ele32_WPTight_;
  TBranch *Common_HLT_Ele32_WPTight_branch;
  bool     Common_HLT_Ele32_WPTight_isLoaded;
  bool     Common_HLT_PFHT1050_;
  TBranch *Common_HLT_PFHT1050_branch;
  bool     Common_HLT_PFHT1050_isLoaded;
  bool     Common_HLT_AK8PFJet500_;
  TBranch *Common_HLT_AK8PFJet500_branch;
  bool     Common_HLT_AK8PFJet500_isLoaded;
  bool     Common_HLT_AK8PFJet380_TrimMass30_;
  TBranch *Common_HLT_AK8PFJet380_TrimMass30_branch;
  bool     Common_HLT_AK8PFJet380_TrimMass30_isLoaded;
  bool     Common_HLT_AK8PFJet360_TrimMass30_;
  TBranch *Common_HLT_AK8PFJet360_TrimMass30_branch;
  bool     Common_HLT_AK8PFJet360_TrimMass30_isLoaded;
  bool     Common_HLT_AK8PFJet400_TrimMass30_;
  TBranch *Common_HLT_AK8PFJet400_TrimMass30_branch;
  bool     Common_HLT_AK8PFJet400_TrimMass30_isLoaded;
  bool     Common_HLT_AK8PFJet420_TrimMass30_;
  TBranch *Common_HLT_AK8PFJet420_TrimMass30_branch;
  bool     Common_HLT_AK8PFJet420_TrimMass30_isLoaded;
  bool     Common_HLT_AK8PFHT750_TrimMass50_;
  TBranch *Common_HLT_AK8PFHT750_TrimMass50_branch;
  bool     Common_HLT_AK8PFHT750_TrimMass50_isLoaded;
  bool     Common_HLT_AK8PFHT800_TrimMass50_;
  TBranch *Common_HLT_AK8PFHT800_TrimMass50_branch;
  bool     Common_HLT_AK8PFHT800_TrimMass50_isLoaded;
  bool     Common_HLT_AK8PFHT850_TrimMass50_;
  TBranch *Common_HLT_AK8PFHT850_TrimMass50_branch;
  bool     Common_HLT_AK8PFHT850_TrimMass50_isLoaded;
  bool     Common_HLT_AK8PFHT900_TrimMass50_;
  TBranch *Common_HLT_AK8PFHT900_TrimMass50_branch;
  bool     Common_HLT_AK8PFHT900_TrimMass50_isLoaded;
  bool     Common_HLT_PFHT650_WideJetMJJ900DEtaJJ1p5_;
  TBranch *Common_HLT_PFHT650_WideJetMJJ900DEtaJJ1p5_branch;
  bool     Common_HLT_PFHT650_WideJetMJJ900DEtaJJ1p5_isLoaded;
  bool     Common_HLT_PFHT650_WideJetMJJ950DEtaJJ1p5_;
  TBranch *Common_HLT_PFHT650_WideJetMJJ950DEtaJJ1p5_branch;
  bool     Common_HLT_PFHT650_WideJetMJJ950DEtaJJ1p5_isLoaded;
  bool     Common_HLT_PFHT800_;
  TBranch *Common_HLT_PFHT800_branch;
  bool     Common_HLT_PFHT800_isLoaded;
  bool     Common_HLT_PFHT900_;
  TBranch *Common_HLT_PFHT900_branch;
  bool     Common_HLT_PFHT900_isLoaded;
  bool     Common_HLT_PFJet450_;
  TBranch *Common_HLT_PFJet450_branch;
  bool     Common_HLT_PFJet450_isLoaded;
  bool     Common_HLT_PFJet500_;
  TBranch *Common_HLT_PFJet500_branch;
  bool     Common_HLT_PFJet500_isLoaded;
  bool     Common_HLT_AK8PFJet450_;
  TBranch *Common_HLT_AK8PFJet450_branch;
  bool     Common_HLT_AK8PFJet450_isLoaded;
  bool     Common_HLT_AK8PFHT700_TrimR0p1PT0p03Mass50_;
  TBranch *Common_HLT_AK8PFHT700_TrimR0p1PT0p03Mass50_branch;
  bool     Common_HLT_AK8PFHT700_TrimR0p1PT0p03Mass50_isLoaded;
  bool     Common_HLT_DoubleEl_;
  TBranch *Common_HLT_DoubleEl_branch;
  bool     Common_HLT_DoubleEl_isLoaded;
  bool     Common_HLT_MuEG_;
  TBranch *Common_HLT_MuEG_branch;
  bool     Common_HLT_MuEG_isLoaded;
  bool     Common_HLT_DoubleMu_;
  TBranch *Common_HLT_DoubleMu_branch;
  bool     Common_HLT_DoubleMu_isLoaded;
  bool     Common_pass_duplicate_removal_ee_em_mm_;
  TBranch *Common_pass_duplicate_removal_ee_em_mm_branch;
  bool     Common_pass_duplicate_removal_ee_em_mm_isLoaded;
  bool     Common_pass_duplicate_removal_mm_em_ee_;
  TBranch *Common_pass_duplicate_removal_mm_em_ee_branch;
  bool     Common_pass_duplicate_removal_mm_em_ee_isLoaded;
  bool     Common_noiseFlag_;
  TBranch *Common_noiseFlag_branch;
  bool     Common_noiseFlag_isLoaded;
  bool     Common_noiseFlagMC_;
  TBranch *Common_noiseFlagMC_branch;
  bool     Common_noiseFlagMC_isLoaded;
  bool     Common_passGoodRun_;
  TBranch *Common_passGoodRun_branch;
  bool     Common_passGoodRun_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > *Common_met_p4_;
  TBranch *Common_met_p4_branch;
  bool     Common_met_p4_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > *Common_met_p4_jesup_;
  TBranch *Common_met_p4_jesup_branch;
  bool     Common_met_p4_jesup_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > *Common_met_p4_jesdn_;
  TBranch *Common_met_p4_jesdn_branch;
  bool     Common_met_p4_jesdn_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > *Common_met_p4_jerup_;
  TBranch *Common_met_p4_jerup_branch;
  bool     Common_met_p4_jerup_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > *Common_met_p4_jerdn_;
  TBranch *Common_met_p4_jerdn_branch;
  bool     Common_met_p4_jerdn_isLoaded;
  float    Common_event_lepSF_;
  TBranch *Common_event_lepSF_branch;
  bool     Common_event_lepSF_isLoaded;
  float    Common_event_lepSFelup_;
  TBranch *Common_event_lepSFelup_branch;
  bool     Common_event_lepSFelup_isLoaded;
  float    Common_event_lepSFeldn_;
  TBranch *Common_event_lepSFeldn_branch;
  bool     Common_event_lepSFeldn_isLoaded;
  float    Common_event_lepSFmuup_;
  TBranch *Common_event_lepSFmuup_branch;
  bool     Common_event_lepSFmuup_isLoaded;
  float    Common_event_lepSFmudn_;
  TBranch *Common_event_lepSFmudn_branch;
  bool     Common_event_lepSFmudn_isLoaded;
  float    Common_event_lepSFTight_;
  TBranch *Common_event_lepSFTight_branch;
  bool     Common_event_lepSFTight_isLoaded;
  float    Common_event_lepSFelupTight_;
  TBranch *Common_event_lepSFelupTight_branch;
  bool     Common_event_lepSFelupTight_isLoaded;
  float    Common_event_lepSFeldnTight_;
  TBranch *Common_event_lepSFeldnTight_branch;
  bool     Common_event_lepSFeldnTight_isLoaded;
  float    Common_event_lepSFmuupTight_;
  TBranch *Common_event_lepSFmuupTight_branch;
  bool     Common_event_lepSFmuupTight_isLoaded;
  float    Common_event_lepSFmudnTight_;
  TBranch *Common_event_lepSFmudnTight_branch;
  bool     Common_event_lepSFmudnTight_isLoaded;
  float    Common_event_tightBtagSF_;
  TBranch *Common_event_tightBtagSF_branch;
  bool     Common_event_tightBtagSF_isLoaded;
  float    Common_event_tightBtagSFup_;
  TBranch *Common_event_tightBtagSFup_branch;
  bool     Common_event_tightBtagSFup_isLoaded;
  float    Common_event_tightBtagSFdn_;
  TBranch *Common_event_tightBtagSFdn_branch;
  bool     Common_event_tightBtagSFdn_isLoaded;
  float    Common_event_tightBtagSFHFup_;
  TBranch *Common_event_tightBtagSFHFup_branch;
  bool     Common_event_tightBtagSFHFup_isLoaded;
  float    Common_event_tightBtagSFHFdn_;
  TBranch *Common_event_tightBtagSFHFdn_branch;
  bool     Common_event_tightBtagSFHFdn_isLoaded;
  float    Common_event_tightBtagSFLFup_;
  TBranch *Common_event_tightBtagSFLFup_branch;
  bool     Common_event_tightBtagSFLFup_isLoaded;
  float    Common_event_tightBtagSFLFdn_;
  TBranch *Common_event_tightBtagSFLFdn_branch;
  bool     Common_event_tightBtagSFLFdn_isLoaded;
  float    Common_event_mediumBtagSF_;
  TBranch *Common_event_mediumBtagSF_branch;
  bool     Common_event_mediumBtagSF_isLoaded;
  float    Common_event_mediumBtagSFup_;
  TBranch *Common_event_mediumBtagSFup_branch;
  bool     Common_event_mediumBtagSFup_isLoaded;
  float    Common_event_mediumBtagSFdn_;
  TBranch *Common_event_mediumBtagSFdn_branch;
  bool     Common_event_mediumBtagSFdn_isLoaded;
  float    Common_event_mediumBtagSFHFup_;
  TBranch *Common_event_mediumBtagSFHFup_branch;
  bool     Common_event_mediumBtagSFHFup_isLoaded;
  float    Common_event_mediumBtagSFHFdn_;
  TBranch *Common_event_mediumBtagSFHFdn_branch;
  bool     Common_event_mediumBtagSFHFdn_isLoaded;
  float    Common_event_mediumBtagSFLFup_;
  TBranch *Common_event_mediumBtagSFLFup_branch;
  bool     Common_event_mediumBtagSFLFup_isLoaded;
  float    Common_event_mediumBtagSFLFdn_;
  TBranch *Common_event_mediumBtagSFLFdn_branch;
  bool     Common_event_mediumBtagSFLFdn_isLoaded;
  float    Common_event_looseBtagSF_;
  TBranch *Common_event_looseBtagSF_branch;
  bool     Common_event_looseBtagSF_isLoaded;
  float    Common_event_looseBtagSFup_;
  TBranch *Common_event_looseBtagSFup_branch;
  bool     Common_event_looseBtagSFup_isLoaded;
  float    Common_event_looseBtagSFdn_;
  TBranch *Common_event_looseBtagSFdn_branch;
  bool     Common_event_looseBtagSFdn_isLoaded;
  float    Common_event_looseBtagSFHFup_;
  TBranch *Common_event_looseBtagSFHFup_branch;
  bool     Common_event_looseBtagSFHFup_isLoaded;
  float    Common_event_looseBtagSFHFdn_;
  TBranch *Common_event_looseBtagSFHFdn_branch;
  bool     Common_event_looseBtagSFHFdn_isLoaded;
  float    Common_event_looseBtagSFLFup_;
  TBranch *Common_event_looseBtagSFLFup_branch;
  bool     Common_event_looseBtagSFLFup_isLoaded;
  float    Common_event_looseBtagSFLFdn_;
  TBranch *Common_event_looseBtagSFLFdn_branch;
  bool     Common_event_looseBtagSFLFdn_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > *Common_lep_p4_;
  TBranch *Common_lep_p4_branch;
  bool     Common_lep_p4_isLoaded;
  vector<int> *Common_lep_idxs_;
  TBranch *Common_lep_idxs_branch;
  bool     Common_lep_idxs_isLoaded;
  vector<int> *Common_lep_pdgid_;
  TBranch *Common_lep_pdgid_branch;
  bool     Common_lep_pdgid_isLoaded;
  vector<int> *Common_lep_tight_;
  TBranch *Common_lep_tight_branch;
  bool     Common_lep_tight_isLoaded;
  vector<float> *Common_lep_dxy_;
  TBranch *Common_lep_dxy_branch;
  bool     Common_lep_dxy_isLoaded;
  vector<float> *Common_lep_dz_;
  TBranch *Common_lep_dz_branch;
  bool     Common_lep_dz_isLoaded;
  vector<float> *Common_lep_ip3d_;
  TBranch *Common_lep_ip3d_branch;
  bool     Common_lep_ip3d_isLoaded;
  vector<float> *Common_lep_sip3d_;
  TBranch *Common_lep_sip3d_branch;
  bool     Common_lep_sip3d_isLoaded;
  vector<float> *Common_lep_SF_;
  TBranch *Common_lep_SF_branch;
  bool     Common_lep_SF_isLoaded;
  vector<float> *Common_lep_SFTight_;
  TBranch *Common_lep_SFTight_branch;
  bool     Common_lep_SFTight_isLoaded;
  vector<float> *Common_lep_SFdn_;
  TBranch *Common_lep_SFdn_branch;
  bool     Common_lep_SFdn_isLoaded;
  vector<float> *Common_lep_SFdnTight_;
  TBranch *Common_lep_SFdnTight_branch;
  bool     Common_lep_SFdnTight_isLoaded;
  vector<float> *Common_lep_SFup_;
  TBranch *Common_lep_SFup_branch;
  bool     Common_lep_SFup_isLoaded;
  vector<float> *Common_lep_SFupTight_;
  TBranch *Common_lep_SFupTight_branch;
  bool     Common_lep_SFupTight_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > *Common_jet_p4_;
  TBranch *Common_jet_p4_branch;
  bool     Common_jet_p4_isLoaded;
  vector<int> *Common_jet_idxs_;
  TBranch *Common_jet_idxs_branch;
  bool     Common_jet_idxs_isLoaded;
  vector<bool> *Common_jet_passBloose_;
  TBranch *Common_jet_passBloose_branch;
  bool     Common_jet_passBloose_isLoaded;
  vector<bool> *Common_jet_passBmedium_;
  TBranch *Common_jet_passBmedium_branch;
  bool     Common_jet_passBmedium_isLoaded;
  vector<bool> *Common_jet_passBtight_;
  TBranch *Common_jet_passBtight_branch;
  bool     Common_jet_passBtight_isLoaded;
  vector<int> *Common_jet_id_;
  TBranch *Common_jet_id_branch;
  bool     Common_jet_id_isLoaded;
  vector<int> *Common_jet_puid_;
  TBranch *Common_jet_puid_branch;
  bool     Common_jet_puid_isLoaded;
  vector<int> *Common_jet_overlapfatjet_;
  TBranch *Common_jet_overlapfatjet_branch;
  bool     Common_jet_overlapfatjet_isLoaded;
  vector<float> *Common_jet_pt_jesup_;
  TBranch *Common_jet_pt_jesup_branch;
  bool     Common_jet_pt_jesup_isLoaded;
  vector<float> *Common_jet_pt_jesdn_;
  TBranch *Common_jet_pt_jesdn_branch;
  bool     Common_jet_pt_jesdn_isLoaded;
  vector<float> *Common_jet_pt_jerup_;
  TBranch *Common_jet_pt_jerup_branch;
  bool     Common_jet_pt_jerup_isLoaded;
  vector<float> *Common_jet_pt_jerdn_;
  TBranch *Common_jet_pt_jerdn_branch;
  bool     Common_jet_pt_jerdn_isLoaded;
  vector<float> *Common_jet_mass_jesup_;
  TBranch *Common_jet_mass_jesup_branch;
  bool     Common_jet_mass_jesup_isLoaded;
  vector<float> *Common_jet_mass_jesdn_;
  TBranch *Common_jet_mass_jesdn_branch;
  bool     Common_jet_mass_jesdn_isLoaded;
  vector<float> *Common_jet_mass_jerup_;
  TBranch *Common_jet_mass_jerup_branch;
  bool     Common_jet_mass_jerup_isLoaded;
  vector<float> *Common_jet_mass_jerdn_;
  TBranch *Common_jet_mass_jerdn_branch;
  bool     Common_jet_mass_jerdn_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > *Common_fatjet_p4_;
  TBranch *Common_fatjet_p4_branch;
  bool     Common_fatjet_p4_isLoaded;
  vector<int> *Common_fatjet_idxs_;
  TBranch *Common_fatjet_idxs_branch;
  bool     Common_fatjet_idxs_isLoaded;
  vector<int> *Common_fatjet_id_;
  TBranch *Common_fatjet_id_branch;
  bool     Common_fatjet_id_isLoaded;
  vector<float> *Common_fatjet_msoftdrop_;
  TBranch *Common_fatjet_msoftdrop_branch;
  bool     Common_fatjet_msoftdrop_isLoaded;
  vector<float> *Common_fatjet_deepMD_W_;
  TBranch *Common_fatjet_deepMD_W_branch;
  bool     Common_fatjet_deepMD_W_isLoaded;
  vector<float> *Common_fatjet_deep_W_;
  TBranch *Common_fatjet_deep_W_branch;
  bool     Common_fatjet_deep_W_isLoaded;
  vector<float> *Common_fatjet_deepMD_Z_;
  TBranch *Common_fatjet_deepMD_Z_branch;
  bool     Common_fatjet_deepMD_Z_isLoaded;
  vector<float> *Common_fatjet_deep_Z_;
  TBranch *Common_fatjet_deep_Z_branch;
  bool     Common_fatjet_deep_Z_isLoaded;
  vector<float> *Common_fatjet_deepMD_T_;
  TBranch *Common_fatjet_deepMD_T_branch;
  bool     Common_fatjet_deepMD_T_isLoaded;
  vector<float> *Common_fatjet_deep_T_;
  TBranch *Common_fatjet_deep_T_branch;
  bool     Common_fatjet_deep_T_isLoaded;
  vector<float> *Common_fatjet_deepMD_bb_;
  TBranch *Common_fatjet_deepMD_bb_branch;
  bool     Common_fatjet_deepMD_bb_isLoaded;
  vector<float> *Common_fatjet_particleNetMD_W_;
  TBranch *Common_fatjet_particleNetMD_W_branch;
  bool     Common_fatjet_particleNetMD_W_isLoaded;
  vector<float> *Common_fatjet_particleNetMD_Xqq_;
  TBranch *Common_fatjet_particleNetMD_Xqq_branch;
  bool     Common_fatjet_particleNetMD_Xqq_isLoaded;
  vector<float> *Common_fatjet_particleNetMD_Xcc_;
  TBranch *Common_fatjet_particleNetMD_Xcc_branch;
  bool     Common_fatjet_particleNetMD_Xcc_isLoaded;
  vector<float> *Common_fatjet_particleNetMD_Xbb_;
  TBranch *Common_fatjet_particleNetMD_Xbb_branch;
  bool     Common_fatjet_particleNetMD_Xbb_isLoaded;
  vector<float> *Common_fatjet_particleNetMD_QCD_;
  TBranch *Common_fatjet_particleNetMD_QCD_branch;
  bool     Common_fatjet_particleNetMD_QCD_isLoaded;
  vector<float> *Common_fatjet_particleNet_QCD_;
  TBranch *Common_fatjet_particleNet_QCD_branch;
  bool     Common_fatjet_particleNet_QCD_isLoaded;
  vector<float> *Common_fatjet_particleNet_W_;
  TBranch *Common_fatjet_particleNet_W_branch;
  bool     Common_fatjet_particleNet_W_isLoaded;
  vector<float> *Common_fatjet_particleNet_Z_;
  TBranch *Common_fatjet_particleNet_Z_branch;
  bool     Common_fatjet_particleNet_Z_isLoaded;
  vector<float> *Common_fatjet_particleNet_T_;
  TBranch *Common_fatjet_particleNet_T_branch;
  bool     Common_fatjet_particleNet_T_isLoaded;
  vector<float> *Common_fatjet_tau3_;
  TBranch *Common_fatjet_tau3_branch;
  bool     Common_fatjet_tau3_isLoaded;
  vector<float> *Common_fatjet_tau2_;
  TBranch *Common_fatjet_tau2_branch;
  bool     Common_fatjet_tau2_isLoaded;
  vector<float> *Common_fatjet_tau1_;
  TBranch *Common_fatjet_tau1_branch;
  bool     Common_fatjet_tau1_isLoaded;
  vector<float> *Common_fatjet_tau32_;
  TBranch *Common_fatjet_tau32_branch;
  bool     Common_fatjet_tau32_isLoaded;
  vector<float> *Common_fatjet_tau21_;
  TBranch *Common_fatjet_tau21_branch;
  bool     Common_fatjet_tau21_isLoaded;
  vector<float> *Common_fatjet_subjet0_pt_;
  TBranch *Common_fatjet_subjet0_pt_branch;
  bool     Common_fatjet_subjet0_pt_isLoaded;
  vector<float> *Common_fatjet_subjet0_eta_;
  TBranch *Common_fatjet_subjet0_eta_branch;
  bool     Common_fatjet_subjet0_eta_isLoaded;
  vector<float> *Common_fatjet_subjet0_phi_;
  TBranch *Common_fatjet_subjet0_phi_branch;
  bool     Common_fatjet_subjet0_phi_isLoaded;
  vector<float> *Common_fatjet_subjet0_mass_;
  TBranch *Common_fatjet_subjet0_mass_branch;
  bool     Common_fatjet_subjet0_mass_isLoaded;
  vector<float> *Common_fatjet_subjet1_pt_;
  TBranch *Common_fatjet_subjet1_pt_branch;
  bool     Common_fatjet_subjet1_pt_isLoaded;
  vector<float> *Common_fatjet_subjet1_eta_;
  TBranch *Common_fatjet_subjet1_eta_branch;
  bool     Common_fatjet_subjet1_eta_isLoaded;
  vector<float> *Common_fatjet_subjet1_phi_;
  TBranch *Common_fatjet_subjet1_phi_branch;
  bool     Common_fatjet_subjet1_phi_isLoaded;
  vector<float> *Common_fatjet_subjet1_mass_;
  TBranch *Common_fatjet_subjet1_mass_branch;
  bool     Common_fatjet_subjet1_mass_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > *Common_fatjet_subjet0_p4_;
  TBranch *Common_fatjet_subjet0_p4_branch;
  bool     Common_fatjet_subjet0_p4_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > *Common_fatjet_subjet1_p4_;
  TBranch *Common_fatjet_subjet1_p4_branch;
  bool     Common_fatjet_subjet1_p4_isLoaded;
  vector<int> *Common_fatjet_WP_;
  TBranch *Common_fatjet_WP_branch;
  bool     Common_fatjet_WP_isLoaded;
  vector<int> *Common_fatjet_WP_MD_;
  TBranch *Common_fatjet_WP_MD_branch;
  bool     Common_fatjet_WP_MD_isLoaded;
  vector<int> *Common_fatjet_WP_antimasscut_;
  TBranch *Common_fatjet_WP_antimasscut_branch;
  bool     Common_fatjet_WP_antimasscut_isLoaded;
  vector<int> *Common_fatjet_WP_MD_antimasscut_;
  TBranch *Common_fatjet_WP_MD_antimasscut_branch;
  bool     Common_fatjet_WP_MD_antimasscut_isLoaded;
  vector<float> *Common_fatjet_SFVLoose_;
  TBranch *Common_fatjet_SFVLoose_branch;
  bool     Common_fatjet_SFVLoose_isLoaded;
  vector<float> *Common_fatjet_SFLoose_;
  TBranch *Common_fatjet_SFLoose_branch;
  bool     Common_fatjet_SFLoose_isLoaded;
  vector<float> *Common_fatjet_SFMedium_;
  TBranch *Common_fatjet_SFMedium_branch;
  bool     Common_fatjet_SFMedium_isLoaded;
  vector<float> *Common_fatjet_SFTight_;
  TBranch *Common_fatjet_SFTight_branch;
  bool     Common_fatjet_SFTight_isLoaded;
  vector<float> *Common_fatjet_SFdnLoose_;
  TBranch *Common_fatjet_SFdnLoose_branch;
  bool     Common_fatjet_SFdnLoose_isLoaded;
  vector<float> *Common_fatjet_SFdnVLoose_;
  TBranch *Common_fatjet_SFdnVLoose_branch;
  bool     Common_fatjet_SFdnVLoose_isLoaded;
  vector<float> *Common_fatjet_SFdnMedium_;
  TBranch *Common_fatjet_SFdnMedium_branch;
  bool     Common_fatjet_SFdnMedium_isLoaded;
  vector<float> *Common_fatjet_SFdnTight_;
  TBranch *Common_fatjet_SFdnTight_branch;
  bool     Common_fatjet_SFdnTight_isLoaded;
  vector<float> *Common_fatjet_SFupVLoose_;
  TBranch *Common_fatjet_SFupVLoose_branch;
  bool     Common_fatjet_SFupVLoose_isLoaded;
  vector<float> *Common_fatjet_SFupLoose_;
  TBranch *Common_fatjet_SFupLoose_branch;
  bool     Common_fatjet_SFupLoose_isLoaded;
  vector<float> *Common_fatjet_SFupMedium_;
  TBranch *Common_fatjet_SFupMedium_branch;
  bool     Common_fatjet_SFupMedium_isLoaded;
  vector<float> *Common_fatjet_SFupTight_;
  TBranch *Common_fatjet_SFupTight_branch;
  bool     Common_fatjet_SFupTight_isLoaded;
  vector<float> *Common_fatjet_MD_SFLoose_;
  TBranch *Common_fatjet_MD_SFLoose_branch;
  bool     Common_fatjet_MD_SFLoose_isLoaded;
  vector<float> *Common_fatjet_MD_SFMedium_;
  TBranch *Common_fatjet_MD_SFMedium_branch;
  bool     Common_fatjet_MD_SFMedium_isLoaded;
  vector<float> *Common_fatjet_MD_SFTight_;
  TBranch *Common_fatjet_MD_SFTight_branch;
  bool     Common_fatjet_MD_SFTight_isLoaded;
  vector<float> *Common_fatjet_MD_SFdnLoose_;
  TBranch *Common_fatjet_MD_SFdnLoose_branch;
  bool     Common_fatjet_MD_SFdnLoose_isLoaded;
  vector<float> *Common_fatjet_MD_SFdnMedium_;
  TBranch *Common_fatjet_MD_SFdnMedium_branch;
  bool     Common_fatjet_MD_SFdnMedium_isLoaded;
  vector<float> *Common_fatjet_MD_SFdnTight_;
  TBranch *Common_fatjet_MD_SFdnTight_branch;
  bool     Common_fatjet_MD_SFdnTight_isLoaded;
  vector<float> *Common_fatjet_MD_SFupLoose_;
  TBranch *Common_fatjet_MD_SFupLoose_branch;
  bool     Common_fatjet_MD_SFupLoose_isLoaded;
  vector<float> *Common_fatjet_MD_SFupMedium_;
  TBranch *Common_fatjet_MD_SFupMedium_branch;
  bool     Common_fatjet_MD_SFupMedium_isLoaded;
  vector<float> *Common_fatjet_MD_SFupTight_;
  TBranch *Common_fatjet_MD_SFupTight_branch;
  bool     Common_fatjet_MD_SFupTight_isLoaded;
  vector<float> *Common_fatjet_pt_jesup_;
  TBranch *Common_fatjet_pt_jesup_branch;
  bool     Common_fatjet_pt_jesup_isLoaded;
  vector<float> *Common_fatjet_pt_jesdn_;
  TBranch *Common_fatjet_pt_jesdn_branch;
  bool     Common_fatjet_pt_jesdn_isLoaded;
  vector<float> *Common_fatjet_pt_jerup_;
  TBranch *Common_fatjet_pt_jerup_branch;
  bool     Common_fatjet_pt_jerup_isLoaded;
  vector<float> *Common_fatjet_pt_jerdn_;
  TBranch *Common_fatjet_pt_jerdn_branch;
  bool     Common_fatjet_pt_jerdn_isLoaded;
  vector<float> *Common_fatjet_msoftdrop_jesup_;
  TBranch *Common_fatjet_msoftdrop_jesup_branch;
  bool     Common_fatjet_msoftdrop_jesup_isLoaded;
  vector<float> *Common_fatjet_msoftdrop_jesdn_;
  TBranch *Common_fatjet_msoftdrop_jesdn_branch;
  bool     Common_fatjet_msoftdrop_jesdn_isLoaded;
  vector<float> *Common_fatjet_msoftdrop_jerup_;
  TBranch *Common_fatjet_msoftdrop_jerup_branch;
  bool     Common_fatjet_msoftdrop_jerup_isLoaded;
  vector<float> *Common_fatjet_msoftdrop_jerdn_;
  TBranch *Common_fatjet_msoftdrop_jerdn_branch;
  bool     Common_fatjet_msoftdrop_jerdn_isLoaded;
  vector<float> *Common_fatjet_msoftdrop_jmsup_;
  TBranch *Common_fatjet_msoftdrop_jmsup_branch;
  bool     Common_fatjet_msoftdrop_jmsup_isLoaded;
  vector<float> *Common_fatjet_msoftdrop_jmsdn_;
  TBranch *Common_fatjet_msoftdrop_jmsdn_branch;
  bool     Common_fatjet_msoftdrop_jmsdn_isLoaded;
  vector<float> *Common_fatjet_msoftdrop_jmrup_;
  TBranch *Common_fatjet_msoftdrop_jmrup_branch;
  bool     Common_fatjet_msoftdrop_jmrup_isLoaded;
  vector<float> *Common_fatjet_msoftdrop_jmrdn_;
  TBranch *Common_fatjet_msoftdrop_jmrdn_branch;
  bool     Common_fatjet_msoftdrop_jmrdn_isLoaded;
  vector<float> *Common_fatjet_mass_jesup_;
  TBranch *Common_fatjet_mass_jesup_branch;
  bool     Common_fatjet_mass_jesup_isLoaded;
  vector<float> *Common_fatjet_mass_jesdn_;
  TBranch *Common_fatjet_mass_jesdn_branch;
  bool     Common_fatjet_mass_jesdn_isLoaded;
  vector<float> *Common_fatjet_mass_jerup_;
  TBranch *Common_fatjet_mass_jerup_branch;
  bool     Common_fatjet_mass_jerup_isLoaded;
  vector<float> *Common_fatjet_mass_jerdn_;
  TBranch *Common_fatjet_mass_jerdn_branch;
  bool     Common_fatjet_mass_jerdn_isLoaded;
  vector<float> *Common_fatjet_mass_jmsup_;
  TBranch *Common_fatjet_mass_jmsup_branch;
  bool     Common_fatjet_mass_jmsup_isLoaded;
  vector<float> *Common_fatjet_mass_jmsdn_;
  TBranch *Common_fatjet_mass_jmsdn_branch;
  bool     Common_fatjet_mass_jmsdn_isLoaded;
  vector<float> *Common_fatjet_mass_jmrup_;
  TBranch *Common_fatjet_mass_jmrup_branch;
  bool     Common_fatjet_mass_jmrup_isLoaded;
  vector<float> *Common_fatjet_mass_jmrdn_;
  TBranch *Common_fatjet_mass_jmrdn_branch;
  bool     Common_fatjet_mass_jmrdn_isLoaded;
  float    Common_eventweight_fatjet_SFVLoose_;
  TBranch *Common_eventweight_fatjet_SFVLoose_branch;
  bool     Common_eventweight_fatjet_SFVLoose_isLoaded;
  float    Common_eventweight_fatjet_SFLoose_;
  TBranch *Common_eventweight_fatjet_SFLoose_branch;
  bool     Common_eventweight_fatjet_SFLoose_isLoaded;
  float    Common_eventweight_fatjet_SFMedium_;
  TBranch *Common_eventweight_fatjet_SFMedium_branch;
  bool     Common_eventweight_fatjet_SFMedium_isLoaded;
  float    Common_eventweight_fatjet_SFTight_;
  TBranch *Common_eventweight_fatjet_SFTight_branch;
  bool     Common_eventweight_fatjet_SFTight_isLoaded;
  float    Common_eventweight_fatjet_SFdnVLoose_;
  TBranch *Common_eventweight_fatjet_SFdnVLoose_branch;
  bool     Common_eventweight_fatjet_SFdnVLoose_isLoaded;
  float    Common_eventweight_fatjet_SFdnLoose_;
  TBranch *Common_eventweight_fatjet_SFdnLoose_branch;
  bool     Common_eventweight_fatjet_SFdnLoose_isLoaded;
  float    Common_eventweight_fatjet_SFdnMedium_;
  TBranch *Common_eventweight_fatjet_SFdnMedium_branch;
  bool     Common_eventweight_fatjet_SFdnMedium_isLoaded;
  float    Common_eventweight_fatjet_SFdnTight_;
  TBranch *Common_eventweight_fatjet_SFdnTight_branch;
  bool     Common_eventweight_fatjet_SFdnTight_isLoaded;
  float    Common_eventweight_fatjet_SFupVLoose_;
  TBranch *Common_eventweight_fatjet_SFupVLoose_branch;
  bool     Common_eventweight_fatjet_SFupVLoose_isLoaded;
  float    Common_eventweight_fatjet_SFupLoose_;
  TBranch *Common_eventweight_fatjet_SFupLoose_branch;
  bool     Common_eventweight_fatjet_SFupLoose_isLoaded;
  float    Common_eventweight_fatjet_SFupMedium_;
  TBranch *Common_eventweight_fatjet_SFupMedium_branch;
  bool     Common_eventweight_fatjet_SFupMedium_isLoaded;
  float    Common_eventweight_fatjet_SFupTight_;
  TBranch *Common_eventweight_fatjet_SFupTight_branch;
  bool     Common_eventweight_fatjet_SFupTight_isLoaded;
  float    Common_eventweight_fatjet_MD_SFLoose_;
  TBranch *Common_eventweight_fatjet_MD_SFLoose_branch;
  bool     Common_eventweight_fatjet_MD_SFLoose_isLoaded;
  float    Common_eventweight_fatjet_MD_SFMedium_;
  TBranch *Common_eventweight_fatjet_MD_SFMedium_branch;
  bool     Common_eventweight_fatjet_MD_SFMedium_isLoaded;
  float    Common_eventweight_fatjet_MD_SFTight_;
  TBranch *Common_eventweight_fatjet_MD_SFTight_branch;
  bool     Common_eventweight_fatjet_MD_SFTight_isLoaded;
  float    Common_eventweight_fatjet_MD_SFdnLoose_;
  TBranch *Common_eventweight_fatjet_MD_SFdnLoose_branch;
  bool     Common_eventweight_fatjet_MD_SFdnLoose_isLoaded;
  float    Common_eventweight_fatjet_MD_SFdnMedium_;
  TBranch *Common_eventweight_fatjet_MD_SFdnMedium_branch;
  bool     Common_eventweight_fatjet_MD_SFdnMedium_isLoaded;
  float    Common_eventweight_fatjet_MD_SFdnTight_;
  TBranch *Common_eventweight_fatjet_MD_SFdnTight_branch;
  bool     Common_eventweight_fatjet_MD_SFdnTight_isLoaded;
  float    Common_eventweight_fatjet_MD_SFupLoose_;
  TBranch *Common_eventweight_fatjet_MD_SFupLoose_branch;
  bool     Common_eventweight_fatjet_MD_SFupLoose_isLoaded;
  float    Common_eventweight_fatjet_MD_SFupMedium_;
  TBranch *Common_eventweight_fatjet_MD_SFupMedium_branch;
  bool     Common_eventweight_fatjet_MD_SFupMedium_isLoaded;
  float    Common_eventweight_fatjet_MD_SFupTight_;
  TBranch *Common_eventweight_fatjet_MD_SFupTight_branch;
  bool     Common_eventweight_fatjet_MD_SFupTight_isLoaded;
  int      Common_nb_loose_;
  TBranch *Common_nb_loose_branch;
  bool     Common_nb_loose_isLoaded;
  int      Common_nb_medium_;
  TBranch *Common_nb_medium_branch;
  bool     Common_nb_medium_isLoaded;
  int      Common_nb_tight_;
  TBranch *Common_nb_tight_branch;
  bool     Common_nb_tight_isLoaded;
  vector<int> *Common_gen_idx_;
  TBranch *Common_gen_idx_branch;
  bool     Common_gen_idx_isLoaded;
  vector<int> *Common_gen_mother_idx_;
  TBranch *Common_gen_mother_idx_branch;
  bool     Common_gen_mother_idx_isLoaded;
  vector<int> *Common_gen_mother_id_;
  TBranch *Common_gen_mother_id_branch;
  bool     Common_gen_mother_id_isLoaded;
  vector<int> *Common_gen_pdgid_;
  TBranch *Common_gen_pdgid_branch;
  bool     Common_gen_pdgid_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > *Common_gen_p4s_;
  TBranch *Common_gen_p4s_branch;
  bool     Common_gen_p4s_isLoaded;
  vector<int> *Common_gen_vvvdecay_idx_;
  TBranch *Common_gen_vvvdecay_idx_branch;
  bool     Common_gen_vvvdecay_idx_isLoaded;
  vector<int> *Common_gen_vvvdecay_mother_idx_;
  TBranch *Common_gen_vvvdecay_mother_idx_branch;
  bool     Common_gen_vvvdecay_mother_idx_isLoaded;
  vector<int> *Common_gen_vvvdecay_mother_id_;
  TBranch *Common_gen_vvvdecay_mother_id_branch;
  bool     Common_gen_vvvdecay_mother_id_isLoaded;
  vector<int> *Common_gen_vvvdecay_pdgid_;
  TBranch *Common_gen_vvvdecay_pdgid_branch;
  bool     Common_gen_vvvdecay_pdgid_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > *Common_gen_vvvdecay_p4s_;
  TBranch *Common_gen_vvvdecay_p4s_branch;
  bool     Common_gen_vvvdecay_p4s_isLoaded;
  vector<int> *Common_gen_vvvdecay_taudecayid_;
  TBranch *Common_gen_vvvdecay_taudecayid_branch;
  bool     Common_gen_vvvdecay_taudecayid_isLoaded;
  bool     Common_isSignal_;
  TBranch *Common_isSignal_branch;
  bool     Common_isSignal_isLoaded;
  int      Common_n_W_;
  TBranch *Common_n_W_branch;
  bool     Common_n_W_isLoaded;
  int      Common_n_Z_;
  TBranch *Common_n_Z_branch;
  bool     Common_n_Z_isLoaded;
  int      Common_n_lep_Z_;
  TBranch *Common_n_lep_Z_branch;
  bool     Common_n_lep_Z_isLoaded;
  int      Common_n_leptau_Z_;
  TBranch *Common_n_leptau_Z_branch;
  bool     Common_n_leptau_Z_isLoaded;
  int      Common_n_hadtau_Z_;
  TBranch *Common_n_hadtau_Z_branch;
  bool     Common_n_hadtau_Z_isLoaded;
  int      Common_n_nu_Z_;
  TBranch *Common_n_nu_Z_branch;
  bool     Common_n_nu_Z_isLoaded;
  int      Common_n_b_Z_;
  TBranch *Common_n_b_Z_branch;
  bool     Common_n_b_Z_isLoaded;
  int      Common_n_lep_W_;
  TBranch *Common_n_lep_W_branch;
  bool     Common_n_lep_W_isLoaded;
  int      Common_n_leptau_W_;
  TBranch *Common_n_leptau_W_branch;
  bool     Common_n_leptau_W_isLoaded;
  int      Common_n_hadtau_W_;
  TBranch *Common_n_hadtau_W_branch;
  bool     Common_n_hadtau_W_isLoaded;
  bool     Common_haslepWSS_;
  TBranch *Common_haslepWSS_branch;
  bool     Common_haslepWSS_isLoaded;
  float    Common_genHT_;
  TBranch *Common_genHT_branch;
  bool     Common_genHT_isLoaded;
  int      Common_gen_n_light_lep_;
  TBranch *Common_gen_n_light_lep_branch;
  bool     Common_gen_n_light_lep_isLoaded;
  int      Common_gen_VH_channel_;
  TBranch *Common_gen_VH_channel_branch;
  bool     Common_gen_VH_channel_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > *allHad_jets_p4_;
  TBranch *allHad_jets_p4_branch;
  bool     allHad_jets_p4_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > *allHad_fatjets_mSD_p4_;
  TBranch *allHad_fatjets_mSD_p4_branch;
  bool     allHad_fatjets_mSD_p4_isLoaded;
  vector<int> *allHad_fatjets_WP_MD_;
  TBranch *allHad_fatjets_WP_MD_branch;
  bool     allHad_fatjets_WP_MD_isLoaded;
  vector<int> *allHad_fatjets_commonFJIdxs_;
  TBranch *allHad_fatjets_commonFJIdxs_branch;
  bool     allHad_fatjets_commonFJIdxs_isLoaded;
  int      allHad_nFJ_;
  TBranch *allHad_nFJ_branch;
  bool     allHad_nFJ_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > *allHad_FJ0_mSD_p4_;
  TBranch *allHad_FJ0_mSD_p4_branch;
  bool     allHad_FJ0_mSD_p4_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > *allHad_FJ1_mSD_p4_;
  TBranch *allHad_FJ1_mSD_p4_branch;
  bool     allHad_FJ1_mSD_p4_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > *allHad_FJ2_mSD_p4_;
  TBranch *allHad_FJ2_mSD_p4_branch;
  bool     allHad_FJ2_mSD_p4_isLoaded;
  int      allHad_FJ0_WP_MD_;
  TBranch *allHad_FJ0_WP_MD_branch;
  bool     allHad_FJ0_WP_MD_isLoaded;
  int      allHad_FJ1_WP_MD_;
  TBranch *allHad_FJ1_WP_MD_branch;
  bool     allHad_FJ1_WP_MD_isLoaded;
  int      allHad_FJ2_WP_MD_;
  TBranch *allHad_FJ2_WP_MD_branch;
  bool     allHad_FJ2_WP_MD_isLoaded;
  float    allHad_FJ0_WMD_;
  TBranch *allHad_FJ0_WMD_branch;
  bool     allHad_FJ0_WMD_isLoaded;
  float    allHad_FJ1_WMD_;
  TBranch *allHad_FJ1_WMD_branch;
  bool     allHad_FJ1_WMD_isLoaded;
  float    allHad_FJ2_WMD_;
  TBranch *allHad_FJ2_WMD_branch;
  bool     allHad_FJ2_WMD_isLoaded;
  float    allHad_FJ0_VMD_;
  TBranch *allHad_FJ0_VMD_branch;
  bool     allHad_FJ0_VMD_isLoaded;
  float    allHad_FJ1_VMD_;
  TBranch *allHad_FJ1_VMD_branch;
  bool     allHad_FJ1_VMD_isLoaded;
  float    allHad_FJ2_VMD_;
  TBranch *allHad_FJ2_VMD_branch;
  bool     allHad_FJ2_VMD_isLoaded;
  float    allHad_FJ0_Xqq_;
  TBranch *allHad_FJ0_Xqq_branch;
  bool     allHad_FJ0_Xqq_isLoaded;
  float    allHad_FJ1_Xqq_;
  TBranch *allHad_FJ1_Xqq_branch;
  bool     allHad_FJ1_Xqq_isLoaded;
  float    allHad_FJ2_Xqq_;
  TBranch *allHad_FJ2_Xqq_branch;
  bool     allHad_FJ2_Xqq_isLoaded;
  float    allHad_FJ0_Xcc_;
  TBranch *allHad_FJ0_Xcc_branch;
  bool     allHad_FJ0_Xcc_isLoaded;
  float    allHad_FJ1_Xcc_;
  TBranch *allHad_FJ1_Xcc_branch;
  bool     allHad_FJ1_Xcc_isLoaded;
  float    allHad_FJ2_Xcc_;
  TBranch *allHad_FJ2_Xcc_branch;
  bool     allHad_FJ2_Xcc_isLoaded;
  float    allHad_FJ0_Xbb_;
  TBranch *allHad_FJ0_Xbb_branch;
  bool     allHad_FJ0_Xbb_isLoaded;
  float    allHad_FJ1_Xbb_;
  TBranch *allHad_FJ1_Xbb_branch;
  bool     allHad_FJ1_Xbb_isLoaded;
  float    allHad_FJ2_Xbb_;
  TBranch *allHad_FJ2_Xbb_branch;
  bool     allHad_FJ2_Xbb_isLoaded;
  float    allHad_FJ0_QCD_;
  TBranch *allHad_FJ0_QCD_branch;
  bool     allHad_FJ0_QCD_isLoaded;
  float    allHad_FJ1_QCD_;
  TBranch *allHad_FJ1_QCD_branch;
  bool     allHad_FJ1_QCD_isLoaded;
  float    allHad_FJ2_QCD_;
  TBranch *allHad_FJ2_QCD_branch;
  bool     allHad_FJ2_QCD_isLoaded;
  int      allHad_FJ0_commonFJIdxs_;
  TBranch *allHad_FJ0_commonFJIdxs_branch;
  bool     allHad_FJ0_commonFJIdxs_isLoaded;
  int      allHad_FJ1_commonFJIdxs_;
  TBranch *allHad_FJ1_commonFJIdxs_branch;
  bool     allHad_FJ1_commonFJIdxs_isLoaded;
  int      allHad_FJ2_commonFJIdxs_;
  TBranch *allHad_FJ2_commonFJIdxs_branch;
  bool     allHad_FJ2_commonFJIdxs_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > *allHad_VVV_mSD_p4_;
  TBranch *allHad_VVV_mSD_p4_branch;
  bool     allHad_VVV_mSD_p4_isLoaded;
  float    allHad_mVVV_;
  TBranch *allHad_mVVV_branch;
  bool     allHad_mVVV_isLoaded;
  float    allHad_ptVVV_;
  TBranch *allHad_ptVVV_branch;
  bool     allHad_ptVVV_isLoaded;
  float    allHad_HT_;
  TBranch *allHad_HT_branch;
  bool     allHad_HT_isLoaded;
  float    allHad_HT_FJ_;
  TBranch *allHad_HT_FJ_branch;
  bool     allHad_HT_FJ_isLoaded;
  int      allHad_nb_loose_;
  TBranch *allHad_nb_loose_branch;
  bool     allHad_nb_loose_isLoaded;
  int      allHad_nb_medium_;
  TBranch *allHad_nb_medium_branch;
  bool     allHad_nb_medium_isLoaded;
  int      allHad_nb_tight_;
  TBranch *allHad_nb_tight_branch;
  bool     allHad_nb_tight_isLoaded;
  float    allHad_FJ01_dPhi_;
  TBranch *allHad_FJ01_dPhi_branch;
  bool     allHad_FJ01_dPhi_isLoaded;
  float    allHad_FJ01_dEta_;
  TBranch *allHad_FJ01_dEta_branch;
  bool     allHad_FJ01_dEta_isLoaded;
  float    allHad_FJ01_dR_;
  TBranch *allHad_FJ01_dR_branch;
  bool     allHad_FJ01_dR_isLoaded;
  float    allHad_FJ01_dPtFrac_;
  TBranch *allHad_FJ01_dPtFrac_branch;
  bool     allHad_FJ01_dPtFrac_isLoaded;
  float    allHad_FJ01_pPRel_;
  TBranch *allHad_FJ01_pPRel_branch;
  bool     allHad_FJ01_pPRel_isLoaded;
  float    allHad_FJ02_dPhi_;
  TBranch *allHad_FJ02_dPhi_branch;
  bool     allHad_FJ02_dPhi_isLoaded;
  float    allHad_FJ02_dEta_;
  TBranch *allHad_FJ02_dEta_branch;
  bool     allHad_FJ02_dEta_isLoaded;
  float    allHad_FJ02_dR_;
  TBranch *allHad_FJ02_dR_branch;
  bool     allHad_FJ02_dR_isLoaded;
  float    allHad_FJ02_dPtFrac_;
  TBranch *allHad_FJ02_dPtFrac_branch;
  bool     allHad_FJ02_dPtFrac_isLoaded;
  float    allHad_FJ02_pPRel_;
  TBranch *allHad_FJ02_pPRel_branch;
  bool     allHad_FJ02_pPRel_isLoaded;
  float    allHad_FJ12_dPhi_;
  TBranch *allHad_FJ12_dPhi_branch;
  bool     allHad_FJ12_dPhi_isLoaded;
  float    allHad_FJ12_dEta_;
  TBranch *allHad_FJ12_dEta_branch;
  bool     allHad_FJ12_dEta_isLoaded;
  float    allHad_FJ12_dR_;
  TBranch *allHad_FJ12_dR_branch;
  bool     allHad_FJ12_dR_isLoaded;
  float    allHad_FJ12_dPtFrac_;
  TBranch *allHad_FJ12_dPtFrac_branch;
  bool     allHad_FJ12_dPtFrac_isLoaded;
  float    allHad_FJ12_pPRel_;
  TBranch *allHad_FJ12_pPRel_branch;
  bool     allHad_FJ12_pPRel_isLoaded;
public: 
void Init(TTree *tree);
void GetEntry(unsigned int idx); 
void LoadAllBranches(); 
  const int &Common_isData();
  const int &Common_run();
  const int &Common_lumi();
  const unsigned long long &Common_evt();
  const int &Common_year();
  const float &Common_genWeight();
  const float &Common_btagWeight_DeepCSVB();
  const float &Common_wgt();
  const float &Common_event_puWeight();
  const float &Common_event_puWeightup();
  const float &Common_event_puWeightdn();
  const float &Common_event_prefireWeight();
  const float &Common_event_prefireWeightup();
  const float &Common_event_prefireWeightdn();
  const float &Common_event_triggerWeight();
  const float &Common_event_triggerWeightup();
  const float &Common_event_triggerWeightdn();
  const vector<float> &Common_LHEReweightingWeight();
  const bool &Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ();
  const bool &Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL();
  const bool &Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8();
  const bool &Common_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ();
  const bool &Common_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL();
  const bool &Common_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ();
  const bool &Common_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL();
  const bool &Common_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ();
  const bool &Common_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL();
  const bool &Common_HLT_IsoMu24();
  const bool &Common_HLT_Ele32_WPTight();
  const bool &Common_HLT_PFHT1050();
  const bool &Common_HLT_AK8PFJet500();
  const bool &Common_HLT_AK8PFJet380_TrimMass30();
  const bool &Common_HLT_AK8PFJet360_TrimMass30();
  const bool &Common_HLT_AK8PFJet400_TrimMass30();
  const bool &Common_HLT_AK8PFJet420_TrimMass30();
  const bool &Common_HLT_AK8PFHT750_TrimMass50();
  const bool &Common_HLT_AK8PFHT800_TrimMass50();
  const bool &Common_HLT_AK8PFHT850_TrimMass50();
  const bool &Common_HLT_AK8PFHT900_TrimMass50();
  const bool &Common_HLT_PFHT650_WideJetMJJ900DEtaJJ1p5();
  const bool &Common_HLT_PFHT650_WideJetMJJ950DEtaJJ1p5();
  const bool &Common_HLT_PFHT800();
  const bool &Common_HLT_PFHT900();
  const bool &Common_HLT_PFJet450();
  const bool &Common_HLT_PFJet500();
  const bool &Common_HLT_AK8PFJet450();
  const bool &Common_HLT_AK8PFHT700_TrimR0p1PT0p03Mass50();
  const bool &Common_HLT_DoubleEl();
  const bool &Common_HLT_MuEG();
  const bool &Common_HLT_DoubleMu();
  const bool &Common_pass_duplicate_removal_ee_em_mm();
  const bool &Common_pass_duplicate_removal_mm_em_ee();
  const bool &Common_noiseFlag();
  const bool &Common_noiseFlagMC();
  const bool &Common_passGoodRun();
  const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &Common_met_p4();
  const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &Common_met_p4_jesup();
  const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &Common_met_p4_jesdn();
  const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &Common_met_p4_jerup();
  const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &Common_met_p4_jerdn();
  const float &Common_event_lepSF();
  const float &Common_event_lepSFelup();
  const float &Common_event_lepSFeldn();
  const float &Common_event_lepSFmuup();
  const float &Common_event_lepSFmudn();
  const float &Common_event_lepSFTight();
  const float &Common_event_lepSFelupTight();
  const float &Common_event_lepSFeldnTight();
  const float &Common_event_lepSFmuupTight();
  const float &Common_event_lepSFmudnTight();
  const float &Common_event_tightBtagSF();
  const float &Common_event_tightBtagSFup();
  const float &Common_event_tightBtagSFdn();
  const float &Common_event_tightBtagSFHFup();
  const float &Common_event_tightBtagSFHFdn();
  const float &Common_event_tightBtagSFLFup();
  const float &Common_event_tightBtagSFLFdn();
  const float &Common_event_mediumBtagSF();
  const float &Common_event_mediumBtagSFup();
  const float &Common_event_mediumBtagSFdn();
  const float &Common_event_mediumBtagSFHFup();
  const float &Common_event_mediumBtagSFHFdn();
  const float &Common_event_mediumBtagSFLFup();
  const float &Common_event_mediumBtagSFLFdn();
  const float &Common_event_looseBtagSF();
  const float &Common_event_looseBtagSFup();
  const float &Common_event_looseBtagSFdn();
  const float &Common_event_looseBtagSFHFup();
  const float &Common_event_looseBtagSFHFdn();
  const float &Common_event_looseBtagSFLFup();
  const float &Common_event_looseBtagSFLFdn();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &Common_lep_p4();
  const vector<int> &Common_lep_idxs();
  const vector<int> &Common_lep_pdgid();
  const vector<int> &Common_lep_tight();
  const vector<float> &Common_lep_dxy();
  const vector<float> &Common_lep_dz();
  const vector<float> &Common_lep_ip3d();
  const vector<float> &Common_lep_sip3d();
  const vector<float> &Common_lep_SF();
  const vector<float> &Common_lep_SFTight();
  const vector<float> &Common_lep_SFdn();
  const vector<float> &Common_lep_SFdnTight();
  const vector<float> &Common_lep_SFup();
  const vector<float> &Common_lep_SFupTight();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &Common_jet_p4();
  const vector<int> &Common_jet_idxs();
  const vector<bool> &Common_jet_passBloose();
  const vector<bool> &Common_jet_passBmedium();
  const vector<bool> &Common_jet_passBtight();
  const vector<int> &Common_jet_id();
  const vector<int> &Common_jet_puid();
  const vector<int> &Common_jet_overlapfatjet();
  const vector<float> &Common_jet_pt_jesup();
  const vector<float> &Common_jet_pt_jesdn();
  const vector<float> &Common_jet_pt_jerup();
  const vector<float> &Common_jet_pt_jerdn();
  const vector<float> &Common_jet_mass_jesup();
  const vector<float> &Common_jet_mass_jesdn();
  const vector<float> &Common_jet_mass_jerup();
  const vector<float> &Common_jet_mass_jerdn();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &Common_fatjet_p4();
  const vector<int> &Common_fatjet_idxs();
  const vector<int> &Common_fatjet_id();
  const vector<float> &Common_fatjet_msoftdrop();
  const vector<float> &Common_fatjet_deepMD_W();
  const vector<float> &Common_fatjet_deep_W();
  const vector<float> &Common_fatjet_deepMD_Z();
  const vector<float> &Common_fatjet_deep_Z();
  const vector<float> &Common_fatjet_deepMD_T();
  const vector<float> &Common_fatjet_deep_T();
  const vector<float> &Common_fatjet_deepMD_bb();
  const vector<float> &Common_fatjet_particleNetMD_W();
  const vector<float> &Common_fatjet_particleNetMD_Xqq();
  const vector<float> &Common_fatjet_particleNetMD_Xcc();
  const vector<float> &Common_fatjet_particleNetMD_Xbb();
  const vector<float> &Common_fatjet_particleNetMD_QCD();
  const vector<float> &Common_fatjet_particleNet_QCD();
  const vector<float> &Common_fatjet_particleNet_W();
  const vector<float> &Common_fatjet_particleNet_Z();
  const vector<float> &Common_fatjet_particleNet_T();
  const vector<float> &Common_fatjet_tau3();
  const vector<float> &Common_fatjet_tau2();
  const vector<float> &Common_fatjet_tau1();
  const vector<float> &Common_fatjet_tau32();
  const vector<float> &Common_fatjet_tau21();
  const vector<float> &Common_fatjet_subjet0_pt();
  const vector<float> &Common_fatjet_subjet0_eta();
  const vector<float> &Common_fatjet_subjet0_phi();
  const vector<float> &Common_fatjet_subjet0_mass();
  const vector<float> &Common_fatjet_subjet1_pt();
  const vector<float> &Common_fatjet_subjet1_eta();
  const vector<float> &Common_fatjet_subjet1_phi();
  const vector<float> &Common_fatjet_subjet1_mass();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &Common_fatjet_subjet0_p4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &Common_fatjet_subjet1_p4();
  const vector<int> &Common_fatjet_WP();
  const vector<int> &Common_fatjet_WP_MD();
  const vector<int> &Common_fatjet_WP_antimasscut();
  const vector<int> &Common_fatjet_WP_MD_antimasscut();
  const vector<float> &Common_fatjet_SFVLoose();
  const vector<float> &Common_fatjet_SFLoose();
  const vector<float> &Common_fatjet_SFMedium();
  const vector<float> &Common_fatjet_SFTight();
  const vector<float> &Common_fatjet_SFdnLoose();
  const vector<float> &Common_fatjet_SFdnVLoose();
  const vector<float> &Common_fatjet_SFdnMedium();
  const vector<float> &Common_fatjet_SFdnTight();
  const vector<float> &Common_fatjet_SFupVLoose();
  const vector<float> &Common_fatjet_SFupLoose();
  const vector<float> &Common_fatjet_SFupMedium();
  const vector<float> &Common_fatjet_SFupTight();
  const vector<float> &Common_fatjet_MD_SFLoose();
  const vector<float> &Common_fatjet_MD_SFMedium();
  const vector<float> &Common_fatjet_MD_SFTight();
  const vector<float> &Common_fatjet_MD_SFdnLoose();
  const vector<float> &Common_fatjet_MD_SFdnMedium();
  const vector<float> &Common_fatjet_MD_SFdnTight();
  const vector<float> &Common_fatjet_MD_SFupLoose();
  const vector<float> &Common_fatjet_MD_SFupMedium();
  const vector<float> &Common_fatjet_MD_SFupTight();
  const vector<float> &Common_fatjet_pt_jesup();
  const vector<float> &Common_fatjet_pt_jesdn();
  const vector<float> &Common_fatjet_pt_jerup();
  const vector<float> &Common_fatjet_pt_jerdn();
  const vector<float> &Common_fatjet_msoftdrop_jesup();
  const vector<float> &Common_fatjet_msoftdrop_jesdn();
  const vector<float> &Common_fatjet_msoftdrop_jerup();
  const vector<float> &Common_fatjet_msoftdrop_jerdn();
  const vector<float> &Common_fatjet_msoftdrop_jmsup();
  const vector<float> &Common_fatjet_msoftdrop_jmsdn();
  const vector<float> &Common_fatjet_msoftdrop_jmrup();
  const vector<float> &Common_fatjet_msoftdrop_jmrdn();
  const vector<float> &Common_fatjet_mass_jesup();
  const vector<float> &Common_fatjet_mass_jesdn();
  const vector<float> &Common_fatjet_mass_jerup();
  const vector<float> &Common_fatjet_mass_jerdn();
  const vector<float> &Common_fatjet_mass_jmsup();
  const vector<float> &Common_fatjet_mass_jmsdn();
  const vector<float> &Common_fatjet_mass_jmrup();
  const vector<float> &Common_fatjet_mass_jmrdn();
  const float &Common_eventweight_fatjet_SFVLoose();
  const float &Common_eventweight_fatjet_SFLoose();
  const float &Common_eventweight_fatjet_SFMedium();
  const float &Common_eventweight_fatjet_SFTight();
  const float &Common_eventweight_fatjet_SFdnVLoose();
  const float &Common_eventweight_fatjet_SFdnLoose();
  const float &Common_eventweight_fatjet_SFdnMedium();
  const float &Common_eventweight_fatjet_SFdnTight();
  const float &Common_eventweight_fatjet_SFupVLoose();
  const float &Common_eventweight_fatjet_SFupLoose();
  const float &Common_eventweight_fatjet_SFupMedium();
  const float &Common_eventweight_fatjet_SFupTight();
  const float &Common_eventweight_fatjet_MD_SFLoose();
  const float &Common_eventweight_fatjet_MD_SFMedium();
  const float &Common_eventweight_fatjet_MD_SFTight();
  const float &Common_eventweight_fatjet_MD_SFdnLoose();
  const float &Common_eventweight_fatjet_MD_SFdnMedium();
  const float &Common_eventweight_fatjet_MD_SFdnTight();
  const float &Common_eventweight_fatjet_MD_SFupLoose();
  const float &Common_eventweight_fatjet_MD_SFupMedium();
  const float &Common_eventweight_fatjet_MD_SFupTight();
  const int &Common_nb_loose();
  const int &Common_nb_medium();
  const int &Common_nb_tight();
  const vector<int> &Common_gen_idx();
  const vector<int> &Common_gen_mother_idx();
  const vector<int> &Common_gen_mother_id();
  const vector<int> &Common_gen_pdgid();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &Common_gen_p4s();
  const vector<int> &Common_gen_vvvdecay_idx();
  const vector<int> &Common_gen_vvvdecay_mother_idx();
  const vector<int> &Common_gen_vvvdecay_mother_id();
  const vector<int> &Common_gen_vvvdecay_pdgid();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &Common_gen_vvvdecay_p4s();
  const vector<int> &Common_gen_vvvdecay_taudecayid();
  const bool &Common_isSignal();
  const int &Common_n_W();
  const int &Common_n_Z();
  const int &Common_n_lep_Z();
  const int &Common_n_leptau_Z();
  const int &Common_n_hadtau_Z();
  const int &Common_n_nu_Z();
  const int &Common_n_b_Z();
  const int &Common_n_lep_W();
  const int &Common_n_leptau_W();
  const int &Common_n_hadtau_W();
  const bool &Common_haslepWSS();
  const float &Common_genHT();
  const int &Common_gen_n_light_lep();
  const int &Common_gen_VH_channel();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &allHad_jets_p4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &allHad_fatjets_mSD_p4();
  const vector<int> &allHad_fatjets_WP_MD();
  const vector<int> &allHad_fatjets_commonFJIdxs();
  const int &allHad_nFJ();
  const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &allHad_FJ0_mSD_p4();
  const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &allHad_FJ1_mSD_p4();
  const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &allHad_FJ2_mSD_p4();
  const int &allHad_FJ0_WP_MD();
  const int &allHad_FJ1_WP_MD();
  const int &allHad_FJ2_WP_MD();
  const float &allHad_FJ0_WMD();
  const float &allHad_FJ1_WMD();
  const float &allHad_FJ2_WMD();
  const float &allHad_FJ0_VMD();
  const float &allHad_FJ1_VMD();
  const float &allHad_FJ2_VMD();
  const float &allHad_FJ0_Xqq();
  const float &allHad_FJ1_Xqq();
  const float &allHad_FJ2_Xqq();
  const float &allHad_FJ0_Xcc();
  const float &allHad_FJ1_Xcc();
  const float &allHad_FJ2_Xcc();
  const float &allHad_FJ0_Xbb();
  const float &allHad_FJ1_Xbb();
  const float &allHad_FJ2_Xbb();
  const float &allHad_FJ0_QCD();
  const float &allHad_FJ1_QCD();
  const float &allHad_FJ2_QCD();
  const int &allHad_FJ0_commonFJIdxs();
  const int &allHad_FJ1_commonFJIdxs();
  const int &allHad_FJ2_commonFJIdxs();
  const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &allHad_VVV_mSD_p4();
  const float &allHad_mVVV();
  const float &allHad_ptVVV();
  const float &allHad_HT();
  const float &allHad_HT_FJ();
  const int &allHad_nb_loose();
  const int &allHad_nb_medium();
  const int &allHad_nb_tight();
  const float &allHad_FJ01_dPhi();
  const float &allHad_FJ01_dEta();
  const float &allHad_FJ01_dR();
  const float &allHad_FJ01_dPtFrac();
  const float &allHad_FJ01_pPRel();
  const float &allHad_FJ02_dPhi();
  const float &allHad_FJ02_dEta();
  const float &allHad_FJ02_dR();
  const float &allHad_FJ02_dPtFrac();
  const float &allHad_FJ02_pPRel();
  const float &allHad_FJ12_dPhi();
  const float &allHad_FJ12_dEta();
  const float &allHad_FJ12_dR();
  const float &allHad_FJ12_dPtFrac();
  const float &allHad_FJ12_pPRel();

  static void progress(int nEventsTotal, int nEventsChain);
};

#ifndef __CINT__
extern VVV0LepTree vvv;
#endif

namespace tas {
  const int &Common_isData();
  const int &Common_run();
  const int &Common_lumi();
  const unsigned long long &Common_evt();
  const int &Common_year();
  const float &Common_genWeight();
  const float &Common_btagWeight_DeepCSVB();
  const float &Common_wgt();
  const float &Common_event_puWeight();
  const float &Common_event_puWeightup();
  const float &Common_event_puWeightdn();
  const float &Common_event_prefireWeight();
  const float &Common_event_prefireWeightup();
  const float &Common_event_prefireWeightdn();
  const float &Common_event_triggerWeight();
  const float &Common_event_triggerWeightup();
  const float &Common_event_triggerWeightdn();
  const vector<float> &Common_LHEReweightingWeight();
  const bool &Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ();
  const bool &Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL();
  const bool &Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8();
  const bool &Common_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ();
  const bool &Common_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL();
  const bool &Common_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ();
  const bool &Common_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL();
  const bool &Common_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ();
  const bool &Common_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL();
  const bool &Common_HLT_IsoMu24();
  const bool &Common_HLT_Ele32_WPTight();
  const bool &Common_HLT_PFHT1050();
  const bool &Common_HLT_AK8PFJet500();
  const bool &Common_HLT_AK8PFJet380_TrimMass30();
  const bool &Common_HLT_AK8PFJet360_TrimMass30();
  const bool &Common_HLT_AK8PFJet400_TrimMass30();
  const bool &Common_HLT_AK8PFJet420_TrimMass30();
  const bool &Common_HLT_AK8PFHT750_TrimMass50();
  const bool &Common_HLT_AK8PFHT800_TrimMass50();
  const bool &Common_HLT_AK8PFHT850_TrimMass50();
  const bool &Common_HLT_AK8PFHT900_TrimMass50();
  const bool &Common_HLT_PFHT650_WideJetMJJ900DEtaJJ1p5();
  const bool &Common_HLT_PFHT650_WideJetMJJ950DEtaJJ1p5();
  const bool &Common_HLT_PFHT800();
  const bool &Common_HLT_PFHT900();
  const bool &Common_HLT_PFJet450();
  const bool &Common_HLT_PFJet500();
  const bool &Common_HLT_AK8PFJet450();
  const bool &Common_HLT_AK8PFHT700_TrimR0p1PT0p03Mass50();
  const bool &Common_HLT_DoubleEl();
  const bool &Common_HLT_MuEG();
  const bool &Common_HLT_DoubleMu();
  const bool &Common_pass_duplicate_removal_ee_em_mm();
  const bool &Common_pass_duplicate_removal_mm_em_ee();
  const bool &Common_noiseFlag();
  const bool &Common_noiseFlagMC();
  const bool &Common_passGoodRun();
  const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &Common_met_p4();
  const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &Common_met_p4_jesup();
  const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &Common_met_p4_jesdn();
  const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &Common_met_p4_jerup();
  const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &Common_met_p4_jerdn();
  const float &Common_event_lepSF();
  const float &Common_event_lepSFelup();
  const float &Common_event_lepSFeldn();
  const float &Common_event_lepSFmuup();
  const float &Common_event_lepSFmudn();
  const float &Common_event_lepSFTight();
  const float &Common_event_lepSFelupTight();
  const float &Common_event_lepSFeldnTight();
  const float &Common_event_lepSFmuupTight();
  const float &Common_event_lepSFmudnTight();
  const float &Common_event_tightBtagSF();
  const float &Common_event_tightBtagSFup();
  const float &Common_event_tightBtagSFdn();
  const float &Common_event_tightBtagSFHFup();
  const float &Common_event_tightBtagSFHFdn();
  const float &Common_event_tightBtagSFLFup();
  const float &Common_event_tightBtagSFLFdn();
  const float &Common_event_mediumBtagSF();
  const float &Common_event_mediumBtagSFup();
  const float &Common_event_mediumBtagSFdn();
  const float &Common_event_mediumBtagSFHFup();
  const float &Common_event_mediumBtagSFHFdn();
  const float &Common_event_mediumBtagSFLFup();
  const float &Common_event_mediumBtagSFLFdn();
  const float &Common_event_looseBtagSF();
  const float &Common_event_looseBtagSFup();
  const float &Common_event_looseBtagSFdn();
  const float &Common_event_looseBtagSFHFup();
  const float &Common_event_looseBtagSFHFdn();
  const float &Common_event_looseBtagSFLFup();
  const float &Common_event_looseBtagSFLFdn();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &Common_lep_p4();
  const vector<int> &Common_lep_idxs();
  const vector<int> &Common_lep_pdgid();
  const vector<int> &Common_lep_tight();
  const vector<float> &Common_lep_dxy();
  const vector<float> &Common_lep_dz();
  const vector<float> &Common_lep_ip3d();
  const vector<float> &Common_lep_sip3d();
  const vector<float> &Common_lep_SF();
  const vector<float> &Common_lep_SFTight();
  const vector<float> &Common_lep_SFdn();
  const vector<float> &Common_lep_SFdnTight();
  const vector<float> &Common_lep_SFup();
  const vector<float> &Common_lep_SFupTight();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &Common_jet_p4();
  const vector<int> &Common_jet_idxs();
  const vector<bool> &Common_jet_passBloose();
  const vector<bool> &Common_jet_passBmedium();
  const vector<bool> &Common_jet_passBtight();
  const vector<int> &Common_jet_id();
  const vector<int> &Common_jet_puid();
  const vector<int> &Common_jet_overlapfatjet();
  const vector<float> &Common_jet_pt_jesup();
  const vector<float> &Common_jet_pt_jesdn();
  const vector<float> &Common_jet_pt_jerup();
  const vector<float> &Common_jet_pt_jerdn();
  const vector<float> &Common_jet_mass_jesup();
  const vector<float> &Common_jet_mass_jesdn();
  const vector<float> &Common_jet_mass_jerup();
  const vector<float> &Common_jet_mass_jerdn();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &Common_fatjet_p4();
  const vector<int> &Common_fatjet_idxs();
  const vector<int> &Common_fatjet_id();
  const vector<float> &Common_fatjet_msoftdrop();
  const vector<float> &Common_fatjet_deepMD_W();
  const vector<float> &Common_fatjet_deep_W();
  const vector<float> &Common_fatjet_deepMD_Z();
  const vector<float> &Common_fatjet_deep_Z();
  const vector<float> &Common_fatjet_deepMD_T();
  const vector<float> &Common_fatjet_deep_T();
  const vector<float> &Common_fatjet_deepMD_bb();
  const vector<float> &Common_fatjet_particleNetMD_W();
  const vector<float> &Common_fatjet_particleNetMD_Xqq();
  const vector<float> &Common_fatjet_particleNetMD_Xcc();
  const vector<float> &Common_fatjet_particleNetMD_Xbb();
  const vector<float> &Common_fatjet_particleNetMD_QCD();
  const vector<float> &Common_fatjet_particleNet_QCD();
  const vector<float> &Common_fatjet_particleNet_W();
  const vector<float> &Common_fatjet_particleNet_Z();
  const vector<float> &Common_fatjet_particleNet_T();
  const vector<float> &Common_fatjet_tau3();
  const vector<float> &Common_fatjet_tau2();
  const vector<float> &Common_fatjet_tau1();
  const vector<float> &Common_fatjet_tau32();
  const vector<float> &Common_fatjet_tau21();
  const vector<float> &Common_fatjet_subjet0_pt();
  const vector<float> &Common_fatjet_subjet0_eta();
  const vector<float> &Common_fatjet_subjet0_phi();
  const vector<float> &Common_fatjet_subjet0_mass();
  const vector<float> &Common_fatjet_subjet1_pt();
  const vector<float> &Common_fatjet_subjet1_eta();
  const vector<float> &Common_fatjet_subjet1_phi();
  const vector<float> &Common_fatjet_subjet1_mass();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &Common_fatjet_subjet0_p4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &Common_fatjet_subjet1_p4();
  const vector<int> &Common_fatjet_WP();
  const vector<int> &Common_fatjet_WP_MD();
  const vector<int> &Common_fatjet_WP_antimasscut();
  const vector<int> &Common_fatjet_WP_MD_antimasscut();
  const vector<float> &Common_fatjet_SFVLoose();
  const vector<float> &Common_fatjet_SFLoose();
  const vector<float> &Common_fatjet_SFMedium();
  const vector<float> &Common_fatjet_SFTight();
  const vector<float> &Common_fatjet_SFdnLoose();
  const vector<float> &Common_fatjet_SFdnVLoose();
  const vector<float> &Common_fatjet_SFdnMedium();
  const vector<float> &Common_fatjet_SFdnTight();
  const vector<float> &Common_fatjet_SFupVLoose();
  const vector<float> &Common_fatjet_SFupLoose();
  const vector<float> &Common_fatjet_SFupMedium();
  const vector<float> &Common_fatjet_SFupTight();
  const vector<float> &Common_fatjet_MD_SFLoose();
  const vector<float> &Common_fatjet_MD_SFMedium();
  const vector<float> &Common_fatjet_MD_SFTight();
  const vector<float> &Common_fatjet_MD_SFdnLoose();
  const vector<float> &Common_fatjet_MD_SFdnMedium();
  const vector<float> &Common_fatjet_MD_SFdnTight();
  const vector<float> &Common_fatjet_MD_SFupLoose();
  const vector<float> &Common_fatjet_MD_SFupMedium();
  const vector<float> &Common_fatjet_MD_SFupTight();
  const vector<float> &Common_fatjet_pt_jesup();
  const vector<float> &Common_fatjet_pt_jesdn();
  const vector<float> &Common_fatjet_pt_jerup();
  const vector<float> &Common_fatjet_pt_jerdn();
  const vector<float> &Common_fatjet_msoftdrop_jesup();
  const vector<float> &Common_fatjet_msoftdrop_jesdn();
  const vector<float> &Common_fatjet_msoftdrop_jerup();
  const vector<float> &Common_fatjet_msoftdrop_jerdn();
  const vector<float> &Common_fatjet_msoftdrop_jmsup();
  const vector<float> &Common_fatjet_msoftdrop_jmsdn();
  const vector<float> &Common_fatjet_msoftdrop_jmrup();
  const vector<float> &Common_fatjet_msoftdrop_jmrdn();
  const vector<float> &Common_fatjet_mass_jesup();
  const vector<float> &Common_fatjet_mass_jesdn();
  const vector<float> &Common_fatjet_mass_jerup();
  const vector<float> &Common_fatjet_mass_jerdn();
  const vector<float> &Common_fatjet_mass_jmsup();
  const vector<float> &Common_fatjet_mass_jmsdn();
  const vector<float> &Common_fatjet_mass_jmrup();
  const vector<float> &Common_fatjet_mass_jmrdn();
  const float &Common_eventweight_fatjet_SFVLoose();
  const float &Common_eventweight_fatjet_SFLoose();
  const float &Common_eventweight_fatjet_SFMedium();
  const float &Common_eventweight_fatjet_SFTight();
  const float &Common_eventweight_fatjet_SFdnVLoose();
  const float &Common_eventweight_fatjet_SFdnLoose();
  const float &Common_eventweight_fatjet_SFdnMedium();
  const float &Common_eventweight_fatjet_SFdnTight();
  const float &Common_eventweight_fatjet_SFupVLoose();
  const float &Common_eventweight_fatjet_SFupLoose();
  const float &Common_eventweight_fatjet_SFupMedium();
  const float &Common_eventweight_fatjet_SFupTight();
  const float &Common_eventweight_fatjet_MD_SFLoose();
  const float &Common_eventweight_fatjet_MD_SFMedium();
  const float &Common_eventweight_fatjet_MD_SFTight();
  const float &Common_eventweight_fatjet_MD_SFdnLoose();
  const float &Common_eventweight_fatjet_MD_SFdnMedium();
  const float &Common_eventweight_fatjet_MD_SFdnTight();
  const float &Common_eventweight_fatjet_MD_SFupLoose();
  const float &Common_eventweight_fatjet_MD_SFupMedium();
  const float &Common_eventweight_fatjet_MD_SFupTight();
  const int &Common_nb_loose();
  const int &Common_nb_medium();
  const int &Common_nb_tight();
  const vector<int> &Common_gen_idx();
  const vector<int> &Common_gen_mother_idx();
  const vector<int> &Common_gen_mother_id();
  const vector<int> &Common_gen_pdgid();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &Common_gen_p4s();
  const vector<int> &Common_gen_vvvdecay_idx();
  const vector<int> &Common_gen_vvvdecay_mother_idx();
  const vector<int> &Common_gen_vvvdecay_mother_id();
  const vector<int> &Common_gen_vvvdecay_pdgid();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &Common_gen_vvvdecay_p4s();
  const vector<int> &Common_gen_vvvdecay_taudecayid();
  const bool &Common_isSignal();
  const int &Common_n_W();
  const int &Common_n_Z();
  const int &Common_n_lep_Z();
  const int &Common_n_leptau_Z();
  const int &Common_n_hadtau_Z();
  const int &Common_n_nu_Z();
  const int &Common_n_b_Z();
  const int &Common_n_lep_W();
  const int &Common_n_leptau_W();
  const int &Common_n_hadtau_W();
  const bool &Common_haslepWSS();
  const float &Common_genHT();
  const int &Common_gen_n_light_lep();
  const int &Common_gen_VH_channel();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &allHad_jets_p4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &allHad_fatjets_mSD_p4();
  const vector<int> &allHad_fatjets_WP_MD();
  const vector<int> &allHad_fatjets_commonFJIdxs();
  const int &allHad_nFJ();
  const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &allHad_FJ0_mSD_p4();
  const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &allHad_FJ1_mSD_p4();
  const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &allHad_FJ2_mSD_p4();
  const int &allHad_FJ0_WP_MD();
  const int &allHad_FJ1_WP_MD();
  const int &allHad_FJ2_WP_MD();
  const float &allHad_FJ0_WMD();
  const float &allHad_FJ1_WMD();
  const float &allHad_FJ2_WMD();
  const float &allHad_FJ0_VMD();
  const float &allHad_FJ1_VMD();
  const float &allHad_FJ2_VMD();
  const float &allHad_FJ0_Xqq();
  const float &allHad_FJ1_Xqq();
  const float &allHad_FJ2_Xqq();
  const float &allHad_FJ0_Xcc();
  const float &allHad_FJ1_Xcc();
  const float &allHad_FJ2_Xcc();
  const float &allHad_FJ0_Xbb();
  const float &allHad_FJ1_Xbb();
  const float &allHad_FJ2_Xbb();
  const float &allHad_FJ0_QCD();
  const float &allHad_FJ1_QCD();
  const float &allHad_FJ2_QCD();
  const int &allHad_FJ0_commonFJIdxs();
  const int &allHad_FJ1_commonFJIdxs();
  const int &allHad_FJ2_commonFJIdxs();
  const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &allHad_VVV_mSD_p4();
  const float &allHad_mVVV();
  const float &allHad_ptVVV();
  const float &allHad_HT();
  const float &allHad_HT_FJ();
  const int &allHad_nb_loose();
  const int &allHad_nb_medium();
  const int &allHad_nb_tight();
  const float &allHad_FJ01_dPhi();
  const float &allHad_FJ01_dEta();
  const float &allHad_FJ01_dR();
  const float &allHad_FJ01_dPtFrac();
  const float &allHad_FJ01_pPRel();
  const float &allHad_FJ02_dPhi();
  const float &allHad_FJ02_dEta();
  const float &allHad_FJ02_dR();
  const float &allHad_FJ02_dPtFrac();
  const float &allHad_FJ02_pPRel();
  const float &allHad_FJ12_dPhi();
  const float &allHad_FJ12_dEta();
  const float &allHad_FJ12_dR();
  const float &allHad_FJ12_dPtFrac();
  const float &allHad_FJ12_pPRel();
}
#include "rooutil.h"
#endif
